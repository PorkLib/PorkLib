_headers_

public class _P0__P1_SynchronizedMap_gH_ implements _P0__P1_Map_gH_ {
    private final Object lock;
    private final _P0__P1_Map_gH_ backing;

    public _P0__P1_SynchronizedMap(@NonNull _P0__P1_Map_gH_ backing)    {
        this(backing, backing);
    }

    public _P0__P1_SynchronizedMap(@NonNull _P0__P1_Map_gH_ backing, @NonNull Object lock)    {
        this.backing = backing;
        this.lock = lock;
    }

    @Override
    public int size()   {
        synchronized (this) {
            return this.backing.size();
        }
    }

    @Override
    public boolean isEmpty()    {
        synchronized (this) {
            return this.backing.isEmpty();
        }
    }

    @Override
    public boolean containsKey(_nameP0_ key)    {
        synchronized (this) {
            return this.backing.containsKey(key);
        }
    }

    @Override
    public boolean containsValue(_nameP1_ value)    {
        synchronized (this) {
            return this.backing.containsValue(value);
        }
    }

    @Override
    public _p1_ get(_nameP0_ key)   {
        synchronized (this) {
            return this.backing.get(key);
        }
    }

    // Modification Operations

    @Override
    public _p1_ put(_p0_ key, _p1_ value)   {
        synchronized (this) {
            return this.backing.put(key, value);
        }
    }

    @Override
    public _p1_ remove(_nameP0_ key)    {
        synchronized (this) {
            return this.backing.remove(key);
        }
    }

    // Bulk Operations

    @Override
    public void putAll(@NonNull _P0__P1_Map_gExtends_ m) {
        synchronized (this) {
            m.forEach(this.backing::put);
        }
    }

    @Override
    public void clear() {
        synchronized (this) {
            this.backing.clear();
        }
    }

    // Views

    @Override
    public _P0_Set_GP0_ keySet()    {
        synchronized (this) {
            return this.backing.keySet();
            //TODO: override set with synchronized implementation
        }
    }

    @Override
    public _P1_Collection_GP1_ values() {
        synchronized (this) {
            return this.backing.values();
            //TODO: override collection with synchronized implementation
        }
    }

    @Override
    public ObjectSet<_P0__P1_Map.Entry_gH_> entrySet()  {
        synchronized (this) {
            return this.backing.entrySet();
            //TODO: override set with synchronized implementation
        }
    }


    @Override
    public _p1_ getOrDefault(_nameP0_ key, _p1_ defaultValue) {
        synchronized (this) {
            return this.backing.getOrDefault(key, defaultValue);
        }
    }

    @Override
    public void forEach(@NonNull _P0__P1_BiConsumer_gSuper_ action) {
        synchronized (this) {
            this.backing.forEach(action);
        }
    }

    //TODO: other methods after adding params to generator

    @Override
    public _p1_ putIfAbsent(_p0_ key, _p1_ value) {
        synchronized (this) {
            return this.backing.putIfAbsent(key, value);
        }
    }

    @Override
    public boolean remove(_nameP0_ key, _nameP1_ value) {
        synchronized (this) {
            return this.backing.remove(key, value);
        }
    }

    @Override
    public boolean replace(_p0_ key, _p1_ oldValue, _p1_ newValue) {
        synchronized (this) {
            return this.backing.replace(key, oldValue, newValue);
        }
    }

    @Override
    public _p1_ replace(_p0_ key, _p1_ value) {
        synchronized (this) {
            return this.backing.replace(key, value);
        }
    }
}
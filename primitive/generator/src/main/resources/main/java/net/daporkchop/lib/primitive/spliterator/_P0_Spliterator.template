_headers_

public interface _P0_Spliterator_gH_ {
    boolean tryAdvance(_P0_Consumer_gSuper_ action);

    default void forEachRemaining(_P0_Consumer_gSuper_ action) {
        do {
        } while (this.tryAdvance(action));
    }

    _P0_Spliterator_gH_ trySplit();

    long estimateSize();

    default long getExactSizeIfKnown() {
        return (characteristics() & SIZED) == 0 ? -1L : estimateSize();
    }

    int characteristics();

    default boolean hasCharacteristics(int characteristics) {
        return (characteristics() & characteristics) == characteristics;
    }

    default _P0_Comparator_gSuper_ getComparator() {
        throw new IllegalStateException();
    }

    int ORDERED    = 0x00000010;

    int DISTINCT   = 0x00000001;

    int SORTED     = 0x00000004;

    int SIZED      = 0x00000040;

    int NONNULL    = 0x00000100;

    int IMMUTABLE  = 0x00000400;

    int CONCURRENT = 0x00001000;

    int SUBSIZED = 0x00004000;
}